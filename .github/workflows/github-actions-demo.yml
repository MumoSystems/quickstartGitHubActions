name: Marketing GitHub Actions Demo
run-name: ${{ github.actor }} is demonstrating GitHub Actions üöÄ
on:
  push:
  pull_request:
    types: closed
jobs:
  push_job:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Push event step
        run: echo "üöÄ This job runs only on push events!"
  pr_job:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
      - name: Create Change Work Item
        run: ./create-change-work-item
        env:
          JIRA_URL: https://one-atlas-qxfz.atlassian.net/
          JIRA_API_TOKEN: ${{ secrets.API_TOKEN }}
          JIRA_USERNAME: mkelly@mumosystems.com
          JIRA_ISSUE_DESCRIPTION: Change ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }} ${{ github.event.pull_request.number }} ${{ github.repository }}
          JIRA_ISSUE_SUMMARY: Change ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }} ${{ github.event.pull_request.number }} ${{ github.repository }}
          JIRA_ISSUE_TYPE: 10009
          JIRA_PROJECT: MS
          AFFECTED_SERVICE_ID: ari:cloud:graph::service/37f83634-bfa0-4993-80b5-c730481e10e3/431beaae-94b8-11f0-ba75-0affec4791ff
          REQUEST_TYPE_ID: ms/9338774d-21ce-4712-a1dd-4d908a8ffce3
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # check-work-item-approval:
  #   if: github.event_name == 'pull_request'
  #   runs-on: ubuntu-latest
  #   environment: 
  #     name: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v5
  #     - name: Check Work Item Approval
  #       run: ./check-work-item-approval
  #       env:
  #         JIRA_URL: https://one-atlas-qxfz.atlassian.net/
  #         JIRA_API_TOKEN: ${{ secrets.API_TOKEN }}
  #         JIRA_USERNAME: mkelly@mumosystems.com
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #- name: Wait for merge if not merged
      #  id: wait_for_merge
      #  run: |
      #    if [[ "${{ github.event.pull_request.merged }}" != "true" ]]; then
      #      echo "Pull request not merged. Waiting 5 minutes before checking again..."
      #      sleep 300
      #      # Fetch PR status again using GitHub API
      #      pr_number=${{ github.event.pull_request.number }}
      #      repo=${{ github.repository }}
      #      merged=$(gh pr view $pr_number --repo $repo --json merged --jq .merged)
      #      if [[ "$merged" != "true" ]]; then
      #        echo "Pull request still not merged after waiting. Exiting."
      #        exit 1
      #      fi
      #    fi    
      #- name: Simulate deploy to production
      #  if: success()
      #  run: echo "üöÄ Simulating deployment to the production environment..."
      #- run: echo "üçè This job's status is ${{ job.status }}."